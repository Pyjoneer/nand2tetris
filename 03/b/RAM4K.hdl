// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    	DMux8Way(in=load, sel=address[9..11], a=sel0, b=sel1, c=sel2, d=sel3, e=sel4, f=sel5, g=sel6, h=sel7);
    	RAM512(in=in, load=sel0, address=address[0..8], out=mem0);
    	RAM512(in=in, load=sel1, address=address[0..8], out=mem1);
    	RAM512(in=in, load=sel2, address=address[0..8], out=mem2);
    	RAM512(in=in, load=sel3, address=address[0..8], out=mem3);
    	RAM512(in=in, load=sel4, address=address[0..8], out=mem4);
    	RAM512(in=in, load=sel5, address=address[0..8], out=mem5);
    	RAM512(in=in, load=sel6, address=address[0..8], out=mem6);
    	RAM512(in=in, load=sel7, address=address[0..8], out=mem7);
    	Mux8Way16(a=mem0, b=mem1, c=mem2, d=mem3, e=mem4, f=mem5, g=mem6, h=mem7, sel=address[9..11], out=out);
}